TCanvas c1("c", "canvas", 1200, 900);
TH2F *h = new TH1F("h","efficiency_vs_DR",100,0,2.);
h=(TH1F*)matched_DR_400_inB->Clone();
h->Divide(child_DR_400_inB);
h->SetTitle("efficiency_vs_DR");
h->GetXaxis()->SetTitle("DeltaR");
h->GetYaxis()->SetTitle("efficiency");
h->GetXaxis()->SetRangeUser(0., 0.6);
h->GetYaxis()->SetRangeUser(0., 1.1);
h->Draw();

TCanvas c2("c", "canvas", 1200, 900);
TH2F *h = new TH1F("h","efficiency_vs_pT",100,0,200.);
h=(TH1F*)matched_pT_400_inB->Clone();
h->Divide(child_pT_400_inB);
h->SetTitle("efficiency_vs_pT");
h->GetXaxis()->SetTitle("pT [GeV]");
h->GetYaxis()->SetTitle("efficiency");
h->GetXaxis()->SetRangeUser(0., 100.);
h->GetYaxis()->SetRangeUser(0., 1.1);
h->Draw();

TCanvas c3("c", "canvas", 1200, 900);
TH2F *h = new TH1F("h","efficiency_vs_eta",100,0,2.);
h=(TH1F*)matched_eta_400_inB->Clone();
h->Divide(child_eta_400_inB);
h->SetTitle("efficiency_vs_eta");
h->GetXaxis()->SetTitle("eta");
h->GetYaxis()->SetTitle("efficiency");
h->GetXaxis()->SetRangeUser(-2.6, 2.6);
h->GetYaxis()->SetRangeUser(0., 1.1);
h->Draw();

TCanvas c4("c", "canvas", 1200, 900);
TH2F *h = new TH1F("h","efficiency_vs_phi",100,0,200.);
h=(TH1F*)matched_phi_400_inB->Clone();
h->Divide(child_phi_400_inB);
h->SetTitle("efficiency_vs_phi");
h->GetXaxis()->SetTitle("phi");
h->GetYaxis()->SetTitle("efficiency");
h->GetXaxis()->SetRangeUser(-4., 4.);
h->GetYaxis()->SetRangeUser(0., 1.1);
h->Draw();



TCanvas c1("c", "canvas", 1200, 900);
Double_t norm_1 = efficiency->GetEntries();
efficiency->Scale(1/norm_1);
efficiency->SetLineColor(kRed);
efficiency->SetLineWidth(3);
efficiency->SetTitle("matching efficiency");
efficiency->Draw("hist");


TCanvas c2("c", "canvas", 1200, 900);
gStyle->SetOptStat(0);
n_match->SetLineColor(kRed);
n_match->SetLineWidth(3);
n_match->SetTitle("hist");
n_match->Draw("hist");
n_child->SetLineColor(kBlue);
n_child->SetLineWidth(3);
n_child->Draw("same hist");
leg = new TLegend(0.6,0.8,0.9,0.9);
leg->AddEntry(n_child,"number of childs","l");
leg->AddEntry(n_match,"number of matched tracks","l");
leg->Draw();




TCanvas c1("c", "canvas", 1200, 900);
gStyle->SetOptStat(0);
child_DR_400_inB->SetLineColor(kBlue);
child_DR_400_inB->SetLineWidth(3);
child_DR_400_inB->Rebin(5);
child_DR_400_inB->Draw("hist");
matched_DR_400_inB->SetLineColor(kRed);
matched_DR_400_inB->SetLineWidth(3);
matched_DR_400_inB->SetTitle("DeltaR");
matched_DR_400_inB->Rebin(5);
matched_DR_400_inB->Draw("same hist");
leg = new TLegend(0.6,0.8,0.9,0.9);
leg->AddEntry(matched_DR_400_inB,"matched_DR","l");
leg->AddEntry(child_DR_400_inB,"child_DR","l");
leg->Draw();


//IP2D LogLikelihoodRatio inclusive

TCanvas c1("c", "canvas", 1200, 900);
gStyle->SetOptStat(0);
Double_t norm_1 = ip2d_llr_l->GetEntries();
ip2d_llr_l->Scale(1/norm_1);
ip2d_llr_l->Rebin(2);
ip2d_llr_l->SetLineColor(kRed);
ip2d_llr_l->SetLineWidth(3);
ip2d_llr_l->GetYaxis()->SetRangeUser(1e-4, 1.);
ip2d_llr_l->SetTitle("IP2D LogLikelihoodRatio");
ip2d_llr_l->Draw("hist");
Double_t norm_2 = ip2d_llr_inC->GetEntries();
ip2d_llr_inC->Scale(1/norm_2);
ip2d_llr_inC->Rebin(2);
ip2d_llr_inC->SetLineColor(kBlue);
ip2d_llr_inC->SetLineWidth(3);
ip2d_llr_inC->Draw("same hist");
Double_t norm_3 = ip2d_llr_inB->GetEntries();
ip2d_llr_inB->Scale(1/norm_3);
ip2d_llr_inB->Rebin(2);
ip2d_llr_inB->SetLineColor(kGreen+2);
ip2d_llr_inB->SetLineWidth(3);
ip2d_llr_inB->Draw("same hist");
leg = new TLegend(0.6,0.8,0.9,0.9);
//leg->SetHeader("The Legend Title");
leg->AddEntry(ip2d_llr_l,"light jets","l");
leg->AddEntry(ip2d_llr_inC,"c jets","l");
leg->AddEntry(ip2d_llr_inB,"b jets","l");
leg->Draw();


//IP3D LogLikelihoodRatio inclusive

TCanvas c2("c", "canvas", 1200, 900);
gStyle->SetOptStat(0);
Double_t norm_1 = ip3d_llr_l->GetEntries();
ip3d_llr_l->Scale(1/norm_1);
ip3d_llr_l->Rebin(2);
ip3d_llr_l->SetLineColor(kRed);
ip3d_llr_l->SetLineWidth(3);
ip3d_llr_l->GetYaxis()->SetRangeUser(1e-4, 1.);
ip3d_llr_l->SetTitle("IP3D LogLikelihoodRatio");
ip3d_llr_l->Draw("hist");
Double_t norm_2 = ip3d_llr_inC->GetEntries();
ip3d_llr_inC->Scale(1/norm_2);
ip3d_llr_inC->Rebin(2);
ip3d_llr_inC->SetLineColor(kBlue);
ip3d_llr_inC->SetLineWidth(3);
ip3d_llr_inC->Draw("same hist");
Double_t norm_3 = ip3d_llr_inB->GetEntries();
ip3d_llr_inB->Scale(1/norm_3);
ip3d_llr_inB->Rebin(2);
ip3d_llr_inB->SetLineColor(kGreen+2);
ip3d_llr_inB->SetLineWidth(3);
ip3d_llr_inB->Draw("same hist");
leg = new TLegend(0.6,0.8,0.9,0.9);
//leg->SetHeader("The Legend Title");
leg->AddEntry(ip3d_llr_l,"light jets","l");
leg->AddEntry(ip3d_llr_inC,"c jets","l");
leg->AddEntry(ip3d_llr_inB,"b jets","l");
leg->Draw();


//IP2D LogLikelihoodRatio exclusive

TCanvas c2("c", "canvas", 1200, 900);
gStyle->SetOptStat(0);
Double_t norm_1 = ip2d_llr_l->GetEntries();
ip2d_llr_l->Scale(1/norm_1);
ip3d_llr_l->Rebin(2);
ip2d_llr_l->SetLineColor(kRed);
ip2d_llr_l->SetLineWidth(3);
ip2d_llr_l->GetYaxis()->SetRangeUser(1e-4, 1.);
ip2d_llr_l->SetTitle("IP2D LogLikelihoodRatio");
ip2d_llr_l->Draw("hist");
Double_t norm_2 = ip2d_llr_exC->GetEntries();
ip2d_llr_exC->Scale(1/norm_2);
ip3d_llr_exC->Rebin(2);
ip2d_llr_exC->SetLineColor(kBlue);
ip2d_llr_exC->SetLineWidth(3);
ip2d_llr_exC->Draw("same hist");
Double_t norm_3 = ip2d_llr_exB->GetEntries();
ip2d_llr_exB->Scale(1/norm_3);
ip3d_llr_exB->Rebin(2);
ip2d_llr_exB->SetLineColor(kGreen+2);
ip2d_llr_exB->SetLineWidth(3);
ip2d_llr_exB->Draw("same hist");
leg = new TLegend(0.6,0.8,0.9,0.9);
//leg->SetHeader("The Legend Title");
leg->AddEntry(ip2d_llr_l,"light jets","l");
leg->AddEntry(ip2d_llr_exC,"c jets","l");
leg->AddEntry(ip2d_llr_exB,"b jets","l");
leg->Draw();


//IP3D LogLikelihoodRatio exclusive

TCanvas c("c", "canvas", 1200, 900);
gStyle->SetOptStat(0);
Double_t norm_1 = ip2d_llr_l->GetEntries();
ip3d_llr_l->Scale(1/norm_1);
ip3d_llr_l->Rebin(2);
ip3d_llr_l->SetLineColor(kRed);
ip3d_llr_l->SetLineWidth(3);
ip3d_llr_l->GetYaxis()->SetRangeUser(1e-4, 1.);
ip3d_llr_l->SetTitle("IP3D LogLikelihoodRatio");
ip3d_llr_l->Draw("hist");
Double_t norm_2 = ip3d_llr_exC->GetEntries();
ip3d_llr_exC->Scale(1/norm_2);
ip3d_llr_exC->Rebin(2);
ip3d_llr_exC->SetLineColor(kBlue);
ip3d_llr_exC->SetLineWidth(3);
ip3d_llr_exC->Draw("same hist");
Double_t norm_3 = ip3d_llr_exB->GetEntries();
ip3d_llr_exB->Scale(1/norm_3);
ip3d_llr_exB->Rebin(2);
ip3d_llr_exB->SetLineColor(kGreen+2);
ip3d_llr_exB->SetLineWidth(3);
ip3d_llr_exB->Draw("same hist");
leg = new TLegend(0.6,0.8,0.9,0.9);
//leg->SetHeader("The Legend Title");
leg->AddEntry(ip3d_llr_l,"light jets","l");
leg->AddEntry(ip3d_llr_exC,"c jets","l");
leg->AddEntry(ip3d_llr_exB,"b jets","l");
leg->Draw();


//IP2D LogLikelihoodRatio C_ex_B_in

TCanvas c("c", "canvas", 1200, 900);
gStyle->SetOptStat(0);
Double_t norm_1 = ip2d_llr_l->GetEntries();
ip2d_llr_l->Scale(1/norm_1);
ip2d_llr_l->Rebin(2);
ip2d_llr_l->SetLineColor(kRed);
ip2d_llr_l->SetLineWidth(3);
ip2d_llr_l->GetYaxis()->SetRangeUser(1e-3, 1.);
ip2d_llr_l->SetTitle("IP2D LogLikelihoodRatio");
ip2d_llr_l->Draw("hist");
Double_t norm_2 = ip2d_llr_exC->GetEntries();
ip2d_llr_exC->Scale(1/norm_2);
ip2d_llr_exC->Rebin(2);
ip2d_llr_exC->SetLineColor(kBlue);
ip2d_llr_exC->SetLineWidth(3);
ip2d_llr_exC->Draw("same hist");
Double_t norm_3 = ip2d_llr_inB->GetEntries();
ip2d_llr_inB->Scale(1/norm_3);
ip2d_llr_inB->Rebin(2);
ip2d_llr_inB->SetLineColor(kGreen+2);
ip2d_llr_inB->SetLineWidth(3);
ip2d_llr_inB->Draw("same hist");
leg = new TLegend(0.6,0.8,0.9,0.9);
//leg->SetHeader("The Legend Title");
leg->AddEntry(ip2d_llr_l,"light jets","l");
leg->AddEntry(ip2d_llr_exC,"c jets","l");
leg->AddEntry(ip2d_llr_inB,"b jets","l");
leg->Draw();


//IP3D LogLikelihoodRatio C_ex_B_in

TCanvas c("c", "canvas", 1200, 900);
gStyle->SetOptStat(0);
Double_t norm_1 = ip3d_llr_l->GetEntries();
ip3d_llr_l->Scale(1/norm_1);
ip3d_llr_l->Rebin(2);
ip3d_llr_l->SetLineColor(kRed);
ip3d_llr_l->SetLineWidth(3);
ip3d_llr_l->GetYaxis()->SetRangeUser(1e-3, 1.);
ip3d_llr_l->SetTitle("IP3D LogLikelihoodRatio");
ip3d_llr_l->Draw("hist");
Double_t norm_2 = ip3d_llr_exC->GetEntries();
ip3d_llr_exC->Scale(1/norm_2);
ip3d_llr_exC->Rebin(2);
ip3d_llr_exC->SetLineColor(kBlue);
ip3d_llr_exC->SetLineWidth(3);
ip3d_llr_exC->SetTitle("hist");
ip3d_llr_exC->Draw("same hist");
Double_t norm_3 = ip3d_llr_inB->GetEntries();
ip3d_llr_inB->Scale(1/norm_3);
ip3d_llr_inB->Rebin(2);
ip3d_llr_inB->SetLineColor(kGreen+2);
ip3d_llr_inB->SetLineWidth(3);
ip3d_llr_inB->Draw("same hist");
leg = new TLegend(0.6,0.8,0.9,0.9);
//leg->SetHeader("The Legend Title");
leg->AddEntry(ip3d_llr_l,"light jets","l");
leg->AddEntry(ip3d_llr_exC,"c jets","l");
leg->AddEntry(ip3d_llr_inB,"b jets","l");
leg->Draw();




TCanvas c("c", "canvas", 1200, 900);
gStyle->SetOptStat(0);
Double_t norm_1 = DL1_light->GetEntries();
DL1_light->Scale(1/norm_1);
DL1_light->Rebin(2);
DL1_light->SetLineColor(kRed);
DL1_light->SetLineWidth(3);
DL1_light->GetYaxis()->SetRangeUser(1e-3, 1.);
DL1_light->SetTitle("DL1");
DL1_light->Draw("hist");
Double_t norm_2 = DL1_exC->GetEntries();
DL1_exC->Scale(1/norm_2);
DL1_exC->Rebin(2);
DL1_exC->SetLineColor(kGreen+2);
DL1_exC->SetLineWidth(3);
DL1_exC->Draw("same hist");
Double_t norm_3 = DL1_inB->GetEntries();
DL1_inB->Scale(1/norm_3);
DL1_inB->Rebin(2);
DL1_inB->SetLineColor(kBlue);
DL1_inB->SetLineWidth(3);
DL1_inB->Draw("same hist");
leg = new TLegend(0.6,0.8,0.9,0.9);
//leg->SetHeader("The Legend Title");
leg->AddEntry(DL1_light,"light jets","l");
leg->AddEntry(DL1_exC,"c jets","l");
leg->AddEntry(DL1_inB,"b jets","l");
leg->Draw();


TCanvas c("c", "canvas", 1200, 900);
gStyle->SetOptStat(0);
Double_t norm_1 = DL1_light->GetEntries();
DL1_light->Scale(1/norm_1);
DL1_light->Rebin(2);
DL1_light->SetLineColor(kRed);
DL1_light->SetLineWidth(3);
DL1_light->GetYaxis()->SetRangeUser(1e-4, 1.);
DL1_light->SetTitle("DL1");
DL1_light->Draw("hist");
Double_t norm_2 = DL1_inC->GetEntries();
DL1_inC->Scale(1/norm_2);
DL1_inC->Rebin(2);
DL1_inC->SetLineColor(kGreen+2);
DL1_inC->SetLineWidth(3);
DL1_inC->Draw("same hist");
Double_t norm_3 = DL1_inB->GetEntries();
DL1_inB->Scale(1/norm_3);
DL1_inB->Rebin(2);
DL1_inB->SetLineColor(kBlue);
DL1_inB->SetLineWidth(3);
DL1_inB->Draw("same hist");
leg = new TLegend(0.6,0.8,0.9,0.9);
//leg->SetHeader("The Legend Title");
leg->AddEntry(DL1_light,"light jets","l");
leg->AddEntry(DL1_inC,"c jets","l");
leg->AddEntry(DL1_inB,"b jets","l");
leg->Draw();
